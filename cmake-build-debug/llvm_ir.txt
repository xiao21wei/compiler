@eye = constant [3 x [3 x i32]] [[3 x i32] [i32 1, i32 0, i32 0], [3 x i32] [i32 0, i32 1, i32 0], [3 x i32] [i32 0, i32 0, i32 1]]
@D = constant i32 3
@base = constant [3 x i32] [i32 1, i32 0, i32 0]
@va = global [3 x [3 x i32]] zeroinitializer
@vb = global [3 x [3 x i32]] [[3 x i32] [i32 1, i32 2, i32 3], [3 x i32] [i32 4, i32 5, i32 6], [3 x i32] [i32 7, i32 8, i32 9]]
@vc = global [3 x i32] [i32 4, i32 5, i32 6]
@vd = global [3 x i32] zeroinitializer
@badname = global i32 0
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
define i32 @vdot(i32*, i32*) {
	%3 = alloca i32*
	store i32* %0, i32** %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = alloca i32
	store i32 0, i32* %5
	%6 = alloca i32
	store i32 0, i32* %6
	%7 = alloca i32
	br label %while0

while0:
	%8 = icmp ne i32 1, 0
	br i1 %8, label %block_exec1, label %block0

block0:
	%9 = icmp ne i32 0, 0
	br i1 %9, label %block_exec1, label %block_out1

block_exec1:
	br label %while0_body

block_out1:
	br label %while0_end

while0_body:
	%10 = load i32, i32* %6
	%11 = load i32, i32* %6
	%12 = load i32, i32* %5
	%13 = load i32*, i32** %3
	%14 = getelementptr i32, i32* %13, i32 %12
	%15 = load i32, i32* %14
	%16 = load i32, i32* %5
	%17 = load i32*, i32** %4
	%18 = getelementptr i32, i32* %17, i32 %16
	%19 = load i32, i32* %18
	%20 = mul i32 %15, %19
	%21 = sdiv i32 %20, 1
	%22 = add i32 %11, %21
	store i32 %22, i32* %6
	%23 = load i32, i32* %7
	%24 = load i32, i32* %6
	%25 = srem i32 %24, 2
	%26 = sub i32 %25, 3
	store i32 %26, i32* %7
	%27 = load i32, i32* %5
	%28 = load i32, i32* %5
	%29 = add i32 %28, 1
	store i32 %29, i32* %5
	%30 = load i32, i32* %5
	%31 = icmp eq i32 %30, 3
	br i1 %31, label %block_exec2, label %block1

block1:
	%32 = icmp ne i32 0, 0
	br i1 %32, label %block2, label %block3

block2:
	%33 = load i32, i32* %6
	%34 = sub i32 0, %33
	%35 = icmp eq i32 %34, 0
	%36 = add i32 7, 1
	%37 = zext i1 %35 to i32
	%38 = icmp slt i32 %37, %36
	br i1 %38, label %block_exec2, label %block3

block3:
	%39 = load i32, i32* %6
	%40 = sub i32 8, 1
	%41 = icmp sgt i32 %39, %40
	br i1 %41, label %block_exec2, label %block_out2

block_exec2:
	br label %label0_1

block_out2:
	br label %label0_2

label0_1:
	br label %while0_end
	br label %label0_3

label0_2:
	%43 = icmp ne i32 1, 0
	br i1 %43, label %label1_1, label %label1_2

label1_1:
	br label %while0
	br label %label1_3

label1_2:
	br label %label1_3

label1_3:
	br label %label0_3

label0_3:
	br label %while0

while0_end:
	%45 = load i32, i32* %6
	ret i32 %45
}

define void @print_id(i32) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	call void @putint(i32 %3)
	call void @putch(i32 10)
	%4 = icmp ne i32 0, 0
	br i1 %4, label %block4, label %block_out4

block4:
	%5 = icmp sgt i32 4, 5
	br i1 %5, label %block_exec4, label %block_out4

block_exec4:
	br label %label2_1

block_out4:
	br label %label2_2

label2_1:
	ret void
	br label %label2_2

label2_2:
	ret void
}

define void @print_vec(i32*) {
	%2 = alloca i32*
	store i32* %0, i32** %2
	%3 = load i32*, i32** %2
	%4 = getelementptr i32, i32* %3, i64 0
	%5 = load i32, i32* %4
	%6 = load i32*, i32** %2
	%7 = getelementptr i32, i32* %6, i64 1
	%8 = load i32, i32* %7
	%9 = load i32*, i32** %2
	%10 = getelementptr i32, i32* %9, i64 2
	%11 = load i32, i32* %10
	call void @putint(i32 %5)
	call void @putch(i32 32)
	call void @putint(i32 %8)
	call void @putch(i32 32)
	call void @putint(i32 %11)
	call void @putch(i32 10)
	ret void
}

define void @uselessfunc() {
	%1 = alloca i32
	store i32 0, i32* %1
	%2 = load i32, i32* %1
	%3 = load i32, i32* %1
	%4 = add i32 %3, 2
	%5 = srem i32 5, 2
	%6 = sub i32 %4, %5
	store i32 %6, i32* %1
	%7 = load i32, i32* %1
	%8 = icmp sge i32 %7, 3
	br i1 %8, label %label3_1, label %label3_2

label3_1:
	br label %label3_2

label3_2:
	ret void
}

define void @print_mat([3 x i32]*) {
	%2 = alloca [3 x i32]*
	store [3 x i32]* %0, [3 x i32]** %2
	%3 = alloca i32
	store i32 0, i32* %3
	br label %while1

while1:
	%4 = icmp eq i32 0, 0
	br i1 %4, label %while1_body, label %while1_end

while1_body:
	%5 = load i32, i32* %3
	%6 = load [3 x i32]*, [3 x i32]** %2
	%7 = getelementptr [3 x i32], [3 x i32]* %6, i32 %5
	%8 = getelementptr [3 x i32], [3 x i32]* %7, i32 0, i32 0
	call void @print_vec(i32* %8)
	%9 = load i32, i32* %3
	%10 = load i32, i32* %3
	%11 = add i32 %10, 1
	store i32 %11, i32* %3
	%12 = load i32, i32* %3
	%13 = icmp slt i32 %12, 3
	br i1 %13, label %block5, label %block_out7

block5:
	%14 = icmp ne i32 1, 0
	br i1 %14, label %block_exec7, label %block_out7

block_exec7:
	br label %label4_1

block_out7:
	br label %label4_2

label4_1:
	br label %while1
	br label %label4_3

label4_2:
	%16 = icmp ne i32 1, 0
	br i1 %16, label %label5_1, label %label5_2

label5_1:
	br label %while1_end
	br label %label5_3

label5_2:
	br label %label5_3

label5_3:
	br label %label4_3

label4_3:
	br label %while1

while1_end:
	ret void
}

define i32 @main() {
	call void @print_id(i32 19373311)
	%1 = alloca i32
	store i32 0, i32* %1
	br label %while2

while2:
	%2 = load i32, i32* %1
	%3 = icmp ne i32 %2, 3
	br i1 %3, label %block_exec9, label %block6

block6:
	%4 = load i32, i32* %1
	%5 = icmp slt i32 %4, 3
	br i1 %5, label %block_exec9, label %block_out9

block_exec9:
	br label %while2_body

block_out9:
	br label %while2_end

while2_body:
	%6 = alloca i32
	store i32 0, i32* %6
	br label %while3

while3:
	%7 = load i32, i32* %6
	%8 = sub i32 3, 1
	%9 = icmp sle i32 %7, %8
	br i1 %9, label %while3_body, label %while3_end

while3_body:
	%10 = load i32, i32* %1
	%11 = load i32, i32* %6
	%12 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i32 %10
	%13 = getelementptr [3 x i32], [3 x i32]* %12, i64 0, i32 %11
	%14 = call i32 @getint()
	store i32 %14, i32* %13
	%15 = load i32, i32* %6
	%16 = load i32, i32* %6
	%17 = add i32 %16, 1
	store i32 %17, i32* %6
	br label %while3

while3_end:
	%18 = load i32, i32* %1
	%19 = load i32, i32* %1
	%20 = add i32 %19, 1
	store i32 %20, i32* %1
	br label %while2

while2_end:
	%21 = alloca i32
	store i32 5, i32* %21
	br label %while4

while4:
	%22 = load i32, i32* %21
	%23 = icmp ne i32 %22, 0
	br i1 %23, label %while4_body, label %while4_end

while4_body:
	%24 = load i32, i32* %21
	%25 = load i32, i32* %21
	%26 = sub i32 %25, 1
	store i32 %26, i32* %21
	call void @putch(i32 49)
	call void @putch(i32 50)
	call void @putch(i32 51)
	call void @putch(i32 10)
	br label %while4

while4_end:
	%27 = getelementptr [3 x i32], [3 x i32]* @vc, i32 0, i32 0
	call void @print_vec(i32* %27)
	%28 = alloca i32
	%29 = load i32, i32* %28
	%30 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i64 0
	%31 = getelementptr [3 x i32], [3 x i32]* %30, i32 0, i32 0
	%32 = getelementptr [3 x i32], [3 x i32]* @vc, i32 0, i32 0
	%33 = call i32 @vdot(i32* %31, i32* %32)
	store i32 %33, i32* %28
	%34 = load i32, i32* %28
	call void @putint(i32 %34)
	call void @putch(i32 10)
	%35 = load i32, i32* %28
	%36 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i64 1
	%37 = getelementptr [3 x i32], [3 x i32]* %36, i32 0, i32 0
	%38 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @vb, i64 0, i64 0
	%39 = getelementptr [3 x i32], [3 x i32]* %38, i32 0, i32 0
	%40 = call i32 @vdot(i32* %37, i32* %39)
	store i32 %40, i32* %28
	%41 = load i32, i32* %28
	call void @putint(i32 %41)
	call void @putch(i32 10)
	%42 = load i32, i32* %28
	%43 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i64 2
	%44 = getelementptr [3 x i32], [3 x i32]* %43, i32 0, i32 0
	%45 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @vb, i64 0, i64 0
	%46 = getelementptr [3 x i32], [3 x i32]* %45, i32 0, i32 0
	%47 = call i32 @vdot(i32* %44, i32* %46)
	store i32 %47, i32* %28
	%48 = load i32, i32* %28
	call void @putint(i32 %48)
	call void @putch(i32 10)
	%49 = load i32, i32* %28
	%50 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i64 0
	%51 = getelementptr [3 x i32], [3 x i32]* %50, i32 0, i32 0
	%52 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @vb, i64 0, i64 2
	%53 = getelementptr [3 x i32], [3 x i32]* %52, i32 0, i32 0
	%54 = call i32 @vdot(i32* %51, i32* %53)
	store i32 %54, i32* %28
	%55 = load i32, i32* %28
	call void @putint(i32 %55)
	call void @putch(i32 10)
	%56 = load i32, i32* %28
	%57 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @va, i64 0, i64 0
	%58 = getelementptr [3 x i32], [3 x i32]* %57, i32 0, i32 0
	%59 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @vb, i64 0, i64 1
	%60 = getelementptr [3 x i32], [3 x i32]* %59, i32 0, i32 0
	%61 = call i32 @vdot(i32* %58, i32* %60)
	store i32 %61, i32* %28
	%62 = load i32, i32* %28
	call void @putint(i32 %62)
	call void @putch(i32 10)
	%63 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @vb, i32 0, i32 0
	call void @print_mat([3 x i32]* %63)
	call void @uselessfunc()
	ret i32 0
}
