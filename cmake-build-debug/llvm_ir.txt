@a = global i32 0
@b = global i32 0
@c = global i32 0
@d = global i32 0
@e = global i32 0
@i = global i32 0
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
define i32 @func0(i32, i32) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = alloca i32
	store i32 0, i32* %5
	%6 = alloca i32
	store i32 128, i32* %6
	%7 = load i32, i32* %3
	%8 = load i32, i32* %4
	%9 = add i32 %7, %8
	%10 = load i32, i32* %6
	%11 = srem i32 %9, %10
	ret i32 %11
}

define i32 @func1(i32) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* @i
	%4 = load i32, i32* @i
	%5 = add i32 %4, 1
	store i32 %5, i32* @i
	%6 = load i32, i32* @i
	ret i32 %6
}

define i32 @func2(i32, i32) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = load i32, i32* %3
	%6 = load i32, i32* %4
	%7 = srem i32 %5, %6
	%8 = icmp eq i32 %7, 0
	br i1 %8, label %label0_1, label %label0_2

label0_1:
	ret i32 1
	br label %label0_2

label0_2:
	ret i32 0
}

define i32 @func3() {
	%1 = load i32, i32* @i
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 95)
	call void @putch(i32 105)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %1)
	call void @putch(i32 10)
	%2 = alloca i32
	%3 = alloca i32
	%4 = alloca i32
	%5 = alloca i32
	%6 = alloca i32
	%7 = alloca i32
	store i32 1906, i32* %7
	br label %while0

while0:
	%8 = load i32, i32* @i
	%9 = icmp slt i32 %8, 10000
	br i1 %9, label %while0_body, label %while0_end

while0_body:
	%10 = alloca i32
	%11 = load i32, i32* @a
	%12 = mul i32 %11, 4
	%13 = mul i32 %12, 32
	%14 = load i32, i32* @a
	%15 = mul i32 %13, %14
	%16 = load i32, i32* @a
	%17 = sdiv i32 %15, %16
	%18 = sdiv i32 %17, 32
	store i32 %18, i32* %10
	%19 = load i32, i32* @b
	%20 = load i32, i32* @b
	%21 = load i32, i32* %10
	%22 = call i32 @func0(i32 %20, i32 %21)
	store i32 %22, i32* @b
	%23 = load i32, i32* %2
	%24 = load i32, i32* @a
	%25 = mul i32 %24, 4
	%26 = load i32, i32* @b
	%27 = add i32 %25, %26
	%28 = load i32, i32* @c
	%29 = add i32 %27, %28
	store i32 %29, i32* %2
	%30 = load i32, i32* %3
	%31 = load i32, i32* @a
	%32 = mul i32 %31, 4
	%33 = load i32, i32* @b
	%34 = add i32 %32, %33
	%35 = load i32, i32* @c
	%36 = add i32 %34, %35
	%37 = load i32, i32* @d
	%38 = add i32 %36, %37
	store i32 %38, i32* %3
	%39 = load i32, i32* %4
	%40 = load i32, i32* @a
	%41 = mul i32 %40, 4
	%42 = load i32, i32* @b
	%43 = add i32 %41, %42
	%44 = load i32, i32* @c
	%45 = add i32 %43, %44
	%46 = load i32, i32* @d
	%47 = add i32 %45, %46
	%48 = load i32, i32* @e
	%49 = add i32 %47, %48
	store i32 %49, i32* %4
	%50 = load i32, i32* %5
	%51 = load i32, i32* @a
	%52 = mul i32 %51, 4
	%53 = load i32, i32* @b
	%54 = add i32 %52, %53
	%55 = load i32, i32* @c
	%56 = add i32 %54, %55
	%57 = load i32, i32* @d
	%58 = add i32 %56, %57
	%59 = load i32, i32* @e
	%60 = add i32 %58, %59
	store i32 %60, i32* %5
	%61 = load i32, i32* %6
	%62 = load i32, i32* @a
	%63 = mul i32 %62, 4
	%64 = load i32, i32* @b
	%65 = add i32 %63, %64
	%66 = load i32, i32* @c
	%67 = add i32 %65, %66
	%68 = load i32, i32* @d
	%69 = add i32 %67, %68
	%70 = load i32, i32* @e
	%71 = add i32 %69, %70
	store i32 %71, i32* %6
	%72 = load i32, i32* @i
	%73 = call i32 @func2(i32 %72, i32 1000)
	%74 = icmp ne i32 %73, 0
	br i1 %74, label %label1_1, label %label1_2

label1_1:
	%75 = load i32, i32* %2
	%76 = load i32, i32* %3
	%77 = add i32 %75, %76
	%78 = load i32, i32* %4
	%79 = add i32 %77, %78
	%80 = load i32, i32* %5
	%81 = add i32 %79, %80
	%82 = load i32, i32* %6
	%83 = add i32 %81, %82
	call void @putch(i32 115)
	call void @putch(i32 117)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %83)
	call void @putch(i32 10)
	br label %label1_2

label1_2:
	%84 = load i32, i32* @i
	%85 = call i32 @func1(i32 %84)
	br label %while0

while0_end:
	%86 = load i32, i32* %2
	%87 = load i32, i32* %3
	%88 = add i32 %86, %87
	%89 = load i32, i32* %4
	%90 = add i32 %88, %89
	%91 = load i32, i32* %5
	%92 = add i32 %90, %91
	%93 = load i32, i32* %6
	%94 = add i32 %92, %93
	ret i32 %94
}

define i32 @main() {
	%1 = alloca i32
	store i32 0, i32* %1
	%2 = load i32, i32* @a
	%3 = call i32 @getint()
	store i32 %3, i32* @a
	%4 = load i32, i32* @b
	%5 = call i32 @getint()
	store i32 %5, i32* @b
	%6 = load i32, i32* @c
	%7 = call i32 @getint()
	store i32 %7, i32* @c
	%8 = load i32, i32* @d
	%9 = call i32 @getint()
	store i32 %9, i32* @d
	%10 = load i32, i32* @e
	%11 = call i32 @getint()
	store i32 %11, i32* @e
	%12 = load i32, i32* %1
	%13 = call i32 @getint()
	store i32 %13, i32* %1
	%14 = load i32, i32* %1
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 105)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %14)
	call void @putch(i32 10)
	%15 = call i32 @func3()
	call void @putint(i32 %15)
	call void @putch(i32 10)
	ret i32 0
}
